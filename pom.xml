<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< HEAD
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>venky</groupId>
  <artifactId>mvnproject</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>mvnproject</name>
  <url>http://maven.apache.org</url>

  <properties>
    <!--
      Explicitly declaring the source encoding eliminates the following message: [WARNING] Using platform encoding
      (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
    -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <repositories>
    <repository>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <layout>default</layout>
      <url>http://repo1.maven.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>


  <dependencies>
    <dependency>
      <groupId>org.makumba</groupId>
      <artifactId>makumba</artifactId>
      <version>[0.8.2.7.2,)</version>
    </dependency>
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.7</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.11</version>
      <scope>runtime</scope>
=======

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>test</groupId>
  <artifactId>testproject</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>testproject</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
>>>>>>> e97d944b537a89ccd23fec0d82dd8bf9b55e6d92
    </dependency>
  </dependencies>

  <build>
<<<<<<< HEAD
    <finalName>mvnproject</finalName>
    <sourceDirectory>src/java</sourceDirectory>
    <outputDirectory>target/classes</outputDirectory>
    <plugins>
      <!-- Embedded Jetty (jetty:run-war) -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <configuration>
          <!-- Delete this block to have Jetty run default port (8080) -->
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>8080</port>
            </connector>
          </connectors>
          <!-- force friendly name instead of artifact name + version -->
          <contextPath>${project.build.finalName}</contextPath>
          <!-- This parameter will auto-deploy modified classes. -->
          <!-- You can save changes in a file or class and refresh your browser to view the changes. -->
          <scanIntervalSeconds>3</scanIntervalSeconds>
        </configuration>
      </plugin>

      <!-- Embedded Tomcat (package tomcat:run) -->
      <!-- Standalone Tomcat (package tomcat:deploy) -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <configuration>
          <path>/${project.build.finalName}</path>
          <!-- Embedded port -->
          <port>8080</port>
          <!--
            The default authentication credentials for remote deployment are username "admin" with no password To
            override credentials, define a server in settings.xml and activate it using the <server> element
          -->
          <url>http://localhost:8080/manager</url>
        </configuration>
      </plugin>
    </plugins>
  </build>

=======
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.20.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
>>>>>>> e97d944b537a89ccd23fec0d82dd8bf9b55e6d92
</project>
